#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# This software is licensed as described in the README.rst and LICENSE files, which you should have received as
# part of this distribution.
#
# This will work when installed in site-packages on a target system where the runner script is in /usr/bin
# So, you don't need anything special - no fancy path tricks.

import argparse
import textwrap
from lookOver import __version__ as VERSION, __description__ as DESCRIPTION
from lookOver import pir


def main():
    ap = argparse.ArgumentParser(prog='lookOver',
            description='%(prog)s - ' + DESCRIPTION,
            formatter_class=argparse.RawDescriptionHelpFormatter,
            epilog=textwrap.dedent('''\
                useful links:
                 - Wiki: https://github.com/ricco386/lookOver/wiki
                 - Bug Tracker: https://github.com/ricco386/lookOver/issues
                 - Twitter: https://twitter.com/ricco386

                author:
                  written by Richard Kellner (richard.kellner (at) erigones.com)

                license:
                  This software is licensed as described in the README.rst and LICENSE files,
                  which you should have received as part of this distribution.
                '''))
    # Sensors
    ap.add_argument('-p', '--pir', help='Set pin number on which is PIR sensor connected', type=int)
    ap.add_argument('-l', '--led', help='Set pin number on which LED will be enabled when motion sensed', type=int)
    # Camera
    ap.add_argument('--nopicture', help='Disable picture at movement trigger', action="store_true")
    ap.add_argument('--novideo', help='Disable video recording at movement trigger', action="store_true")
    ap.add_argument('--hflip', help='Set camera hflip', nargs='?', default=False)
    ap.add_argument('--vflip', help='Set camera vflip', nargs='?', default=False)
    ap.add_argument('--resolution', '-r', help='Set camera resolution', nargs='?', default=False)
    # App
    ap.add_argument('-v', '--verbosity', type=int, choices=[10, 20, 30, 40, 50],
            help="Set output verbosity (50: CRITICAL, 40: ERROR, 30: WARNING, 20: INFO, 10: DEBUG)")
    ap.add_argument('--version', action='version', version=('%(prog)s '+  VERSION))
    args = ap.parse_args()

    lo = pir.Sensor(args)
    lo.sense()

if __name__ == '__main__':
    main()
